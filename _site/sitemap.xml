<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zhang Chi</title>
    <description>My Personal Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000https://blueysky27.github.io/sitemap.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 22 Apr 2018 05:05:41 +0800</pubDate>
    <lastBuildDate>Sun, 22 Apr 2018 05:05:41 +0800</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Paper Reading 2018.4.22</title>
        <description>&lt;h1 id=&quot;paper-readings-2018422&quot;&gt;Paper Readings 2018.4.22&lt;/h1&gt;

&lt;h2 id=&quot;learning-transferrable-representations-for-unsupervised-domain-adaptation-ozan-sener-et-al&quot;&gt;Learning Transferrable Representations for Unsupervised Domain Adaptation, Ozan Sener et al.&lt;/h2&gt;

&lt;p&gt;Recently I have been reading papers about domain adaptation, a sub topic of transfer learning I think. Domain adaptation can be divided into multiple sub-problem depending on the number of labels of the target domain, like in unsupervised domain adaptation, there are two domains, the source domain ${\hat{x}_i,\hat{y}_i}$ with $N_s$ data points and the target domain ${x_i}$ with $N_t$ samples. If some of the data points of the target domain have some labels, it becomes semi-supervised domain adaptation.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;This paper, as its title says, deals with unsupervised domain adaptation(UDA) problems. Further more it assumes that the two domains have different distributions $\hat{x}_i\sim p_s$ and $x&lt;/td&gt;
      &lt;td&gt;i\sim p_t$ but same definition space $\hat{x}&lt;em&gt;i, x_i\sim\mathcal{X}$ . So the author thinks that the feature function $\Phi$ of the two domains share in the shallow layer and can be expressed as $\Phi_s=\Phi&lt;/em&gt;{\theta_c, \theta_s}, \Phi_t=\Phi_{\theta_c, \theta_t}$ where $\theta_c$ is the parameter of the shallow layer and $\theta_s, \theta_t$ refer to the respective final layers. This can be viewed as sharing parameters.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The main attribution of this paper, I think, is the formulation of the problem. Here UDA problem is divided into two parts, &lt;strong&gt;transduction&lt;/strong&gt; of labelling unsupervised data points and &lt;strong&gt;adaptation&lt;/strong&gt; of domain shift. I think such intuition is important because we may use this to formalize the problem of domain adaptation. Generally speaking, we are using the representation knowledge of the two domain and the labelling knowledge of the source domain, so it is reasonable to divide the problem in such two terms.&lt;/p&gt;

&lt;p&gt;In solving the problem of &lt;strong&gt;adaptation&lt;/strong&gt;, the author introduce the concept of cyclic consistency. This concept is quite reasonable only when the two domains are rather similar. Cyclic consistency means that if we learn a estimated label function of the target domain, we can use it to evaluate the source domain and compare it with the supervised knowledge. Like I said, sometimes the two domains are so different that we can not simply assume that the kNN method the author used is concrete.&lt;/p&gt;

&lt;p&gt;In terms of the &lt;strong&gt;transduction&lt;/strong&gt;, the author uses the method he called as structured consistency, which is just the regulation term of the loss function, using the traditional kNN method.&lt;/p&gt;

&lt;p&gt;I think these are the major parts of the algorithm of this paper. The author summarizes his great algorithm very well in the paper. Still, I think the problem here is that he only considered the problem of two similar domains. For problem of different domains such as images and videos, probably his method need some changes.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Apr 2018 05:00:00 +0800</pubDate>
        <link>http://localhost:4000/paperreading/2018/04/22/Paper-Reading.html</link>
        <guid isPermaLink="true">http://localhost:4000/paperreading/2018/04/22/Paper-Reading.html</guid>
        
        
        <category>PaperReading</category>
        
      </item>
    
      <item>
        <title>The main purpose of my blog</title>
        <description>&lt;h1&gt; Main Purpose &lt;/h1&gt;
&lt;p&gt;This is the blog of blueysky27(@blueysky27.github.io). I will basically focus on three topics.&lt;/p&gt;

&lt;h2&gt; Comments &lt;/h2&gt;
&lt;p&gt;Comments on some hot topics, mostly about China and Peking University. Such things would be written in English because of government surveliance, and no forks are allowed.&lt;/p&gt;

&lt;h2&gt; Animes &lt;/h2&gt;
&lt;p&gt;I am a great anime fan, and I will sometimes write articles about some great animes I’ve watched to let more people watch it. In fact, I’ve already written some in Chinese.&lt;/p&gt;

&lt;h2&gt; Codes &lt;/h2&gt;
&lt;p&gt;I have been learning computer science for two years now, and I will sometimes share and interpret my codes on Github(like the projects of computational physics last term, which I still haven’t posted), or share my wills on some papers about machine learning and deep learning. I am doing researches about computer vision right now, although still new in this area.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jul 2017 09:31:00 +0800</pubDate>
        <link>http://localhost:4000/comments/2017/07/10/about-me.html</link>
        <guid isPermaLink="true">http://localhost:4000/comments/2017/07/10/about-me.html</guid>
        
        
        <category>Comments</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 04 Jun 2016 21:50:39 +0800</pubDate>
        <link>http://localhost:4000/jekyll/2016/06/04/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2016/06/04/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Example content for posts</title>
        <description>&lt;p&gt;&lt;small&gt;This demo page has been used from &lt;a href=&quot;http://jasonm23.github.io/markdown-css-themes/&quot; target=&quot;_blank&quot;&gt;http://jasonm23.github.io/markdown-css-themes/&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;

&lt;h1&gt;A First Level Header&lt;/h1&gt;

&lt;h2&gt;A Second Level Header&lt;/h2&gt;

&lt;h3&gt;A Third Level Header&lt;/h3&gt;

&lt;h4&gt;A Fourth Level Header&lt;/h4&gt;

&lt;h5&gt;A Fifth Level Header&lt;/h5&gt;

&lt;h6&gt;A Sixed Level Header&lt;/h6&gt;

&lt;p&gt;Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.&lt;/p&gt;

&lt;p&gt;The quick brown fox jumped over the lazy
dog&amp;rsquo;s back.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;Header 3&lt;/h3&gt;

&lt;blockquote&gt;&lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;

&lt;p&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.&lt;/p&gt;

&lt;h2&gt;This is an H2 in a blockquote&lt;/h2&gt;

&lt;p&gt;This is the first level of quoting.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is nested blockquote.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Back to the first level.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Some of these words &lt;em&gt;are emphasized&lt;/em&gt;.
Some of these words &lt;em&gt;are emphasized also&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Use two asterisks for &lt;strong&gt;strong emphasis&lt;/strong&gt;.
Or, if you prefer, &lt;strong&gt;use two underscores instead&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Candy.&lt;/li&gt;
&lt;li&gt;Gum.&lt;/li&gt;
&lt;li&gt;Booze.&lt;/li&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blue&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A list item.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With multiple paragraphs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Another item in the list.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is a list item with two paragraphs. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit. Aliquam hendrerit
mi posuere lectus.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vestibulum enim wisi, viverra nec, fringilla in, laoreet
vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
sit amet velit.*   Suspendisse id sem consectetuer libero luctus adipiscing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a list item with two paragraphs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the second paragraph in the list item. You&amp;rsquo;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Another item in the same list.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A list item with a bit of &lt;code&gt;code&lt;/code&gt; inline.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A list item with a blockquote:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is a blockquote
inside a list item.&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example of a pre code block&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;
    beep
end tell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is an &lt;a href=&quot;#&quot;&gt;example link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I start my morning with a cup of coffee and
&lt;a href=&quot;http://www.nytimes.com/&quot;&gt;The New York Times&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;code-snippet&quot;&gt;Code snippet&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img_thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downloadWallpaper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img_thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Downloading Image'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_alive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img_thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Image of the day downloaded.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Sat, 04 Jun 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/others/2016/06/04/example-content.html</link>
        <guid isPermaLink="true">http://localhost:4000/others/2016/06/04/example-content.html</guid>
        
        
        <category>others</category>
        
      </item>
    
      <item>
        <title>Test Page</title>
        <description>&lt;p&gt;This is a test blog page where we can explore how to embedd images in the blog.&lt;/p&gt;

&lt;h2 id=&quot;image-example-1&quot;&gt;Image example 1&lt;/h2&gt;

&lt;p&gt;Here, I will embedd image from local assets which goes into &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; directory in project’s &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; directory. Choose a specific image, related to particular post. I chose to name the image &lt;code class=&quot;highlighter-rouge&quot;&gt;test-page-image-1.jpg&lt;/code&gt;, which I will embedd as:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;my alternate text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/assets/test-page-image-1.jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/test-page-image-1.jpg&quot; alt=&quot;my alternate text&quot; /&gt;;&lt;/p&gt;

&lt;p&gt;Ofcourse, you can load images from web as well. Just point to image direct URL. For ex, here is one placeholder image:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;my alternate text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;http://lorempixel.com/400/200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://lorempixel.com/400/200&quot; alt=&quot;my alternate text&quot; /&gt;;&lt;/p&gt;

&lt;p&gt;One cool thing about this is the fact that images adapt themselves to the screen size of device. Try to resize your browser window and check for yourself, Have fun.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Jun 2015 21:50:39 +0800</pubDate>
        <link>http://localhost:4000/others/2015/06/04/test-page.html</link>
        <guid isPermaLink="true">http://localhost:4000/others/2015/06/04/test-page.html</guid>
        
        
        <category>others</category>
        
      </item>
    
    
      <item>
        <title>Cool project 1</title>
        <description>Cool project 1</description>
        <link>http://localhost:4000#</link>
        <pubDate>Wed, 01 Jan 2014 00:00:00 +0800</pubDate>
        
        <category>Angular JS</category>
        
        <category>API</category>
        
      </item>
    
      <item>
        <title>Cool project 2</title>
        <description>Cool project 2</description>
        <link>http://localhost:4000#</link>
        <pubDate>Thu, 01 May 2014 00:00:00 +0800</pubDate>
        
        <category>Android</category>
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>Cool project 3</title>
        <description>Cool project 3</description>
        <link>http://localhost:4000#</link>
        <pubDate>Sun, 01 Jun 2014 00:00:00 +0800</pubDate>
        
        <category>HTML</category>
        
        <category>JQuery</category>
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>Cool project 4</title>
        <description>Cool project 4</description>
        <link>http://localhost:4000</link>
        <pubDate>Sat, 01 Oct 2016 00:00:00 +0800</pubDate>
        
        <category>Android</category>
        
        <category>nodejs</category>
        
      </item>
    
  </channel>
</rss>
